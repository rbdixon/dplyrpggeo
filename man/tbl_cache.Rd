% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/tbl_cache.R
\name{tbl_cache}
\alias{tbl_cache}
\title{Execute a function and cache the result as a dplyr database backed tbl.}
\usage{
tbl_cache(src, name, creator, ..., tag = strftime(Sys.time(), format =
  "\%Y\%m\%d"), volatile = FALSE, types = NULL, temporary = FALSE,
  indexes = NULL, analyze = TRUE, geoindexes = NULL)
}
\arguments{
\item{src}{dplyr database source object. This should be a database.}

\item{name}{base name of the table to create.}

\item{creator}{function that, when executed, returns a data frame or tbl result to be cached.}

\item{...}{options to be passed to the \code{creator} function.}

\item{tag}{string appended to base name to form database table name. If \code{volatile==TRUE}
then \code{tag} is set to \code{as.integer( Sys.time() )} automatically.}

\item{volatile}{if \code{TRUE} then a temporary table is created.}

\item{types}{a character vector giving variable types to use for the columns.
See \url{http://www.sqlite.org/datatype3.html} for available types.}

\item{temporary}{if \code{TRUE}, will create a temporary table that is
local to this connection and will be automatically deleted when the
connection expires}

\item{indexes}{a list of character vectors. Each element of the list
will create a new index.}

\item{analyze}{if \code{TRUE} (the default), will automatically ANALYZE the
new table so that the query optimiser has useful information.}

\item{geoindexes}{a list of character vectors. Each element of the list will create a new GIST index.}
}
\value{
A dplyr database backed tbl.
}
\description{
Execute the long running function \code{creator()} and cache the value in \code{src}.
Subsequent calls to \code{tbl_cache} with the same \code{name} and \code{tag} will return a reference to the cached
table in \code{src}. The cached table can be indexed using either standard indexes or
geospatial indexes. If preferred a temporary table can be created.
}
\seealso{
\code{\link{dplyr::copy_to.src_sql}}
}

